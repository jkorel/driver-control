import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.ColorSensor;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;

@TeleOp (name = "DriverControl")
public class Shenanigans extends OpMode
{
    DcMotor frontRight;
    DcMotor frontLeft;
    DcMotor backRight;
    DcMotor backLeft;
    DcMotor leftLift;
    DcMotor rightLift;
    DcMotor intake;
    Servo flippyRelic;
    Servo colorSensorServo;
    ColorSensor colorS;
    float leftY=0;
    float rightY=0;
    float rightX=0;
    float leftX=0;
    float leftFront= 0;
    float leftRear= 0;
    float rightFront=0;
    float rightRear=0;
    float excessLeft=0;
    float excessRight=0;

    @Override
    public void init()
    {
        frontRight = hardwareMap.dcMotor.get("frontRight");
        frontLeft = hardwareMap.dcMotor.get("frontLeft");
        backRight = hardwareMap.dcMotor.get("backRight");
        backLeft = hardwareMap.dcMotor.get("backLeft");
        flippyRelic = hardwareMap.servo.get("flippyRelic");
        intake = hardwareMap.dcMotor.get("intake");
        rightLift = hardwareMap.dcMotor.get("rightLift");
        leftLift = hardwareMap.dcMotor.get("leftLift");
        colorSensorServo=hardwareMap.servo.get("colorSensorServo");
        colorS = hardwareMap.colorSensor.get("colorSensor");
        //frontRight.setDirection(DcMotorSimple.Direction.REVERSE);
        //backRight.setDirection(DcMotorSimple.Direction.REVERSE);
        leftLift.setDirection((DcMotorSimple.Direction.REVERSE));
    }

    @Override
    public void loop() {
        telemetry.addData("blue", colorS.blue());
        telemetry.addData("red", colorS.red());

        telemetry.addData("green", colorS.green());
        //leftY = gamepad1.left_stick_y;
        //leftX = gamepad1.left_stick_x;
        //rightY = gamepad1.right_stick_y;
        //rightX = gamepad1.right_stick_x;

        /*
        if (leftY > .1 || leftY < -.1 || leftX > .1 || leftX < -.1) {
            leftFront = leftY - leftX;
            leftRear = leftY + leftX;
            if (leftFront > leftRear) {
                if (leftFront > 1) {
                    excessLeft = 1 - leftFront;
                }

            } else {
                if (leftRear > 1) {
                    excessLeft = 1 - leftRear;
                }
            }
            leftFront = leftY + leftX + excessLeft; // --, -+,
            leftRear = leftY - leftX + excessLeft; // ++. --,
            frontRight.setPower(leftFront);
            backRight.setPower(leftRear);

        } else {
            frontRight.setPower(0);
            backRight.setPower(0);
        }
        if (rightY > .1 || rightY < -.1 || rightX > .1 || rightX < -.1) {
            leftFront = rightY + rightX;
            leftRear = rightY - rightX;
            if (rightFront > rightRear) {
                if (rightRear > 1) {
                    excessRight = 1 - rightFront;
                }
            } else {
                if (rightRear > 1) {
                    excessRight = 1 - rightRear;

                }
            }
            rightFront = rightY - rightX + excessRight;
            rightRear = rightY + rightX + excessRight;
            frontLeft.setPower(rightFront);
            backLeft.setPower(rightRear);


        } else {
            frontLeft.setPower(0);
            backLeft.setPower(0);
        }
        /*
           if ((gamepad1.left_stick_y) > .10) {
               FrontLeft.setPower(.75);
               FrontRight.setPower(.75);
               BackLeft.setPower(.75);
               BackRight.setPower(.75); // stick goes up
           }
           else if ((gamepad1.left_stick_y >-10{
           fron}
          else if(Math.abs(gamepad1.right_stick_x) > .10) {
           FrontLeft.setPower(-.75);
           FrontRight.setPower(.75);
           BackLeft.setPower(-.75);
           BackRight.setPower(.75); // stick goes left
       }


       else {
           FrontLeft.setPower(0);
           FrontRight.setPower(0);
           BackLeft.setPower(0);
           BackRight.setPower(0); //stick untouched = why should it move

       }

         */

        if (Math.abs(gamepad1.right_stick_y) > .1) {
            frontRight.setPower(-gamepad1.right_stick_y);//robot goes right and left using right stick BASE
            backRight.setPower(-gamepad1.right_stick_y);
        } else {
            frontRight.setPower(0);//robot isn't moving BASE
            backRight.setPower(0);
        }

        if (Math.abs(gamepad1.left_stick_y) > .1) {
            frontLeft.setPower(gamepad1.left_stick_y);//robot goes up and down using left stick BASE
            backLeft.setPower(gamepad1.left_stick_y);
        } else {
            frontLeft.setPower(0);//robot is not moving
            backLeft.setPower(0);
        }

        if (gamepad1.right_bumper) {
            flippyRelic.setPosition(30); // turn servo to flip the Relic off to depot   . 30
            telemetry.addData("servo", flippyRelic.getPosition());
        } else if (gamepad1.left_bumper) {
            flippyRelic.setPosition(-90); // to flip back   . -90
            telemetry.addData("servo", flippyRelic.getPosition());
        } else {
            flippyRelic.setPosition(10); // neutral position   . 0
            telemetry.addData("servo", flippyRelic.getPosition());
        }

        if ((gamepad2.left_stick_y) > .10) {
            leftLift.setPower(gamepad2.left_stick_y);//lift moves up and down on left stick LIFT
            rightLift.setPower(gamepad2.left_stick_y);
        } else if ((gamepad2.left_stick_y) < -.10) {
            leftLift.setPower(gamepad2.left_stick_y);//lift
            rightLift.setPower(gamepad2.left_stick_y);
        } else {
            leftLift.setPower(0);
            rightLift.setPower(0);
        }

        if (gamepad2.x) {
            intake.setPower(.75);
        } else if (gamepad2.y) {
            intake.setPower(-.75);
        } else {
            intake.setPower(0);
        }
        if (gamepad2.right_bumper)
        {
           colorSensorServo.setPosition(30); // turn servo to flip the Relic off to depot   . 30
            telemetry.addData("servo",flippyRelic.getPosition());
        }
        else if (gamepad2.left_bumper)
        {
            colorSensorServo.setPosition(-90); // to flip back   . -90
            telemetry.addData("servo",flippyRelic.getPosition());
        }
        else
        {
            colorSensorServo.setPosition(30); // neutral position   . 0
            telemetry.addData("servo",flippyRelic.getPosition());
        }


    }

}

